everpad for Debian
------------------

everpad is maintained under the umbrella of the Debian Python Applications
Packaging Team, using git-buildpackage. This file documents the steps needed to
package a new upstream version.

One-time setup steps: get your copy of the Debian source package from Git, and
the Debian files for the latest package:
  $ git clone ssh://<user>@git.debian.org/git/collab-maint/everpad.git
  $ cd everpad
  $ git checkout -b pristine-tar remotes/origin/pristine-tar
  $ git checkout -b upstream remotes/origin/upstream
  $ git checkout -b dfsg_clean remotes/origin/dfsg_clean
  $ git checkout master
  [optional] $ apt-get source everpad

From inside the everpad folder:
1. Retrieve the new upstream tarball:
  $ uscan

2. Update the debian/changelog file to document the new version. Hint: you can
copy the file ../everpad-<new_version>/debian/changelog that was
automatically updated by the previous step.

3. Build the package:
  $ git-buildpackage --git-pristine-tar --git-ignore-new -us -uc

4. Before uploading the new package, make sure to build the package at least
once in a chroot environment:
  [only the first time] $ sudo pbuilder create
  $ sudo pbuilder --update
  $ BUILDER=pbuilder git-buildpackage --git-pbuilder --git-pristine-tar --git-ignore-new

5. When you are fine with the new package, upload it to Debian.

6. Don't forget to commit your changes, tag the new Debian version and push
everything back up to the Debian Git repository:
  $ git commit -a
  $ git-buildpackage --git-tag
  $ git push --all
  $ git push --tags

Thanks for updating the package!

 -- Emilien Klein <emilien+debian@klein.st>  Mon, 24 Mar 2014 21:26:12 +0100
